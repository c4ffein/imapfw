#
# Used by me to development purposes.
#

MainConf = {
    # The number of concurrent workers for the accounts. Default is the number
    # of accounts to sync.
    'max_sync_accounts': 7,
}


def configure(ui):
    pass


from imapfw.api import controllers, types, drivers, shell

ImapConfA = {
    'backend':  'imaplib3',
    'host':      '127.0.0.1',
    'port':     10143,
    'username': 'nicolas',
    'password': 'sebrecht',
    'max_connections': 3,
}


class ImapA(types.Imap):
    conf = ImapConfA
    driver = drivers.Imap # Default: drivers.Imap.
    #controllers = [FakeImapA]


class MShell(shell.Shell):
    def session(self):
        from imapfw.types import Messages, Message as M

        self.M = M
        self.register('M')

        self.Messages = Messages
        self.register('Messages')

        self.m = Messages()
        self.m.add(M(1))
        self.m.add(M(2))
        self.register('m')

        self.interactive()


class ImapShell(shell.DriveDriver):
    conf = {'repository': ImapA}

    def session(self):
        self.buildDriver()

        d = self.d

        d.connect()
        d.getCapability()
        d.login()

        namespace = d.getNamespace()
        print(namespace)

        folders = d.getFolders()
        print(str(folders))

        d.select(folders[-1])
        messages = d.searchUID()
        print(messages)

        attributes = drivers.FetchAttributes()
        attributes.setDefaults()
        messages = d.getMessages(messages, attributes)
        for m in messages.values():
            print(m.attributes)
        d.logout()


# vim: syntax=python ts=4 expandtab :
